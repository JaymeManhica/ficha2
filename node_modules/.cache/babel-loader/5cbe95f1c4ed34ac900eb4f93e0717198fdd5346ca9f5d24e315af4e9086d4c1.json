{"ast":null,"code":"var _jsxFileName = \"D:\\\\projectos\\\\estudos\\\\React\\\\ficha2\\\\src\\\\component\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n\n// Componente para renderização condicional do status do usuário\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserStatus = ({\n  isLoggedIn\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Status: Usu\\xE1rio est\\xE1 logado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Status: Usu\\xE1rio n\\xE3o est\\xE1 logado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = UserStatus;\nfunction TodoList() {\n  _s();\n  const [tarefas, setTarefas] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Estado para simular login\n\n  // Montagem (equivalente ao componentDidMount)\n  useEffect(() => {\n    console.log(\"Componente montado\");\n\n    // Função de limpeza (equivalente ao componentWillUnmount)\n    return () => {\n      console.log(\"Componente desmontado\");\n    };\n  }, []); // A dependência vazia faz com que isso só seja executado na montagem\n\n  // Atualização (equivalente ao componentDidUpdate)\n  useEffect(() => {\n    console.log(\"Componente atualizado\");\n  }, [tarefas]); // Quando 'tarefas' mudar, este useEffect será acionado\n\n  const handleAdicionarTarefa = () => {\n    const novaTarefa = prompt(\"Digite uma nova tarefa:\");\n    if (novaTarefa) {\n      setTarefas([...tarefas, novaTarefa]);\n    }\n  };\n  const handleRemoverTarefa = indice => {\n    setTarefas([...tarefas.slice(0, indice), ...tarefas.slice(indice + 1)]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de tarefas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserStatus, {\n      isLoggedIn: isLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tarefas.map((tarefa, indice) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: tarefa.concluido\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: tarefa\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoverTarefa(indice),\n          children: \"Remover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, indice, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdicionarTarefa,\n      children: \"Adicionar tarefa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"qIUhkp5Tt4RVsYX37UT6ug2KyKQ=\");\n_c2 = TodoList;\nexport default TodoList;\nvar _c, _c2;\n$RefreshReg$(_c, \"UserStatus\");\n$RefreshReg$(_c2, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserStatus","isLoggedIn","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","TodoList","_s","tarefas","setTarefas","setIsLoggedIn","console","log","handleAdicionarTarefa","novaTarefa","prompt","handleRemoverTarefa","indice","slice","map","tarefa","type","checked","concluido","onClick","_c2","$RefreshReg$"],"sources":["D:/projectos/estudos/React/ficha2/src/component/TodoList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\n// Componente para renderização condicional do status do usuário\r\nconst UserStatus = ({ isLoggedIn }) => {\r\n  return (\r\n    <div>\r\n      {isLoggedIn ? (\r\n        <p>Status: Usuário está logado</p>\r\n      ) : (\r\n        <p>Status: Usuário não está logado</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction TodoList() {\r\n  const [tarefas, setTarefas] = useState([]);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Estado para simular login\r\n\r\n  // Montagem (equivalente ao componentDidMount)\r\n  useEffect(() => {\r\n    console.log(\"Componente montado\");\r\n\r\n    // Função de limpeza (equivalente ao componentWillUnmount)\r\n    return () => {\r\n      console.log(\"Componente desmontado\");\r\n    };\r\n  }, []); // A dependência vazia faz com que isso só seja executado na montagem\r\n\r\n  // Atualização (equivalente ao componentDidUpdate)\r\n  useEffect(() => {\r\n    console.log(\"Componente atualizado\");\r\n  }, [tarefas]); // Quando 'tarefas' mudar, este useEffect será acionado\r\n\r\n  const handleAdicionarTarefa = () => {\r\n    const novaTarefa = prompt(\"Digite uma nova tarefa:\");\r\n    if (novaTarefa) {\r\n      setTarefas([...tarefas, novaTarefa]);\r\n    }\r\n  };\r\n\r\n  const handleRemoverTarefa = (indice) => {\r\n    setTarefas([...tarefas.slice(0, indice), ...tarefas.slice(indice + 1)]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Lista de tarefas</h1>\r\n\r\n      {/* Renderização condicional do status do usuário */}\r\n      <UserStatus isLoggedIn={isLoggedIn} />\r\n\r\n      <ul>\r\n        {tarefas.map((tarefa, indice) => (\r\n          <li key={indice}>\r\n            <input type=\"checkbox\" checked={tarefa.concluido} />\r\n            <span>{tarefa}</span>\r\n            <button onClick={() => handleRemoverTarefa(indice)}>\r\n              Remover\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={handleAdicionarTarefa}>Adicionar tarefa</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}