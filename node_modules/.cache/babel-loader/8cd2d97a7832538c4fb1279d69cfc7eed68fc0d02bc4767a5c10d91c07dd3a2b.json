{"ast":null,"code":"var _jsxFileName = \"D:\\\\projectos\\\\estudos\\\\React\\\\ficha2\\\\src\\\\component\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [tarefas, setTarefas] = useState([]);\n  useEffect(() => {\n    console.log(\"Componente montado\");\n  }, []); // A dependência vazia faz com que isso só seja executado no montagem\n\n  const handleAdicionarTarefa = () => {\n    const novaTarefa = prompt(\"Digite uma nova tarefa:\");\n    if (novaTarefa) {\n      setTarefas([...tarefas, novaTarefa]);\n    }\n  };\n  const handleRemoverTarefa = indice => {\n    setTarefas([...tarefas.slice(0, indice), ...tarefas.slice(indice + 1)]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de tarefas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tarefas.map((tarefa, indice) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: tarefa.concluido\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: tarefa\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoverTarefa(indice),\n          children: \"Remover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, indice, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdicionarTarefa,\n      children: \"Adicionar tarefa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"k8w0e1KPLhWZJc25k9Lzni7t0no=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TodoList","_s","tarefas","setTarefas","console","log","handleAdicionarTarefa","novaTarefa","prompt","handleRemoverTarefa","indice","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tarefa","type","checked","concluido","onClick","_c","$RefreshReg$"],"sources":["D:/projectos/estudos/React/ficha2/src/component/TodoList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction TodoList() {\r\n  const [tarefas, setTarefas] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Componente montado\");\r\n  }, []); // A dependência vazia faz com que isso só seja executado no montagem\r\n\r\n  const handleAdicionarTarefa = () => {\r\n    const novaTarefa = prompt(\"Digite uma nova tarefa:\");\r\n    if (novaTarefa) {\r\n      setTarefas([...tarefas, novaTarefa]);\r\n    }\r\n  };\r\n\r\n  const handleRemoverTarefa = (indice) => {\r\n    setTarefas([...tarefas.slice(0, indice), ...tarefas.slice(indice + 1)]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Lista de tarefas</h1>\r\n      <ul>\r\n        {tarefas.map((tarefa, indice) => (\r\n          <li key={indice}>\r\n            <input type=\"checkbox\" checked={tarefa.concluido} />\r\n            <span>{tarefa}</span>\r\n            <button onClick={() => handleRemoverTarefa(indice)}>\r\n              Remover\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={handleAdicionarTarefa}>Adicionar tarefa</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACdO,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAClC,MAAMC,UAAU,GAAGC,MAAM,CAAC,yBAAyB,CAAC;IACpD,IAAID,UAAU,EAAE;MACdJ,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEK,UAAU,CAAC,CAAC;IACtC;EACF,CAAC;EAED,MAAME,mBAAmB,GAAIC,MAAM,IAAK;IACtCP,UAAU,CAAC,CAAC,GAAGD,OAAO,CAACS,KAAK,CAAC,CAAC,EAAED,MAAM,CAAC,EAAE,GAAGR,OAAO,CAACS,KAAK,CAACD,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;EACzE,CAAC;EAED,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBjB,OAAA;MAAAa,QAAA,EACGV,OAAO,CAACe,GAAG,CAAC,CAACC,MAAM,EAAER,MAAM,kBAC1BX,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAOoB,IAAI,EAAC,UAAU;UAACC,OAAO,EAAEF,MAAM,CAACG;QAAU;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpDjB,OAAA;UAAAa,QAAA,EAAOM;QAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrBjB,OAAA;UAAQuB,OAAO,EAAEA,CAAA,KAAMb,mBAAmB,CAACC,MAAM,CAAE;UAAAE,QAAA,EAAC;QAEpD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GALFN,MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLjB,OAAA;MAAQuB,OAAO,EAAEhB,qBAAsB;MAAAM,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV;AAACf,EAAA,CAnCQD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAqCjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}