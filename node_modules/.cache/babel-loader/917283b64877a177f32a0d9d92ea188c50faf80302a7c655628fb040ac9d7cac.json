{"ast":null,"code":"var _jsxFileName = \"D:\\\\projectos\\\\estudos\\\\React\\\\ficha2\\\\src\\\\component\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [logado, setLogado] = useState(false);\n\n  // Montagem (equivalente ao componentDidMount)\n  useEffect(() => {\n    console.log(\"Componente montado\");\n\n    // Função de limpeza (equivalente ao componentWillUnmount)\n    return () => {\n      console.log(\"Componente desmontado\");\n    };\n  }, []); // A dependência vazia faz com que isso só seja executado na montagem\n\n  // Atualização (equivalente ao componentDidUpdate)\n  useEffect(() => {\n    console.log(\"Componente atualizado\");\n  }, [tarefas]); // Quando 'tarefas' mudar, este useEffect será acionado\n\n  const handleAdicionarTarefa = () => {\n    const novaTarefa = prompt(\"Digite uma nova tarefa:\");\n    if (novaTarefa) {\n      setTarefas([...tarefas, novaTarefa]);\n    }\n  };\n  const handleRemoverTarefa = indice => {\n    setTarefas([...tarefas.slice(0, indice), ...tarefas.slice(indice + 1)]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de tarefas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tarefas.map((tarefa, indice) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: tarefa.concluido\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: tarefa\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoverTarefa(indice),\n          children: \"Remover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, indice, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), logado ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Voc\\xEA est\\xE1 logado!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Voc\\xEA n\\xE3o est\\xE1 logado.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setLogado(!logado),\n      children: \"Alterar status de login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"/OMtN6tPUfb+gmbySLdZn6FwvSg=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TodoList","_s","logado","setLogado","console","log","tarefas","handleAdicionarTarefa","novaTarefa","prompt","setTarefas","handleRemoverTarefa","indice","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tarefa","type","checked","concluido","onClick","_c","$RefreshReg$"],"sources":["D:/projectos/estudos/React/ficha2/src/component/TodoList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction TodoList() {\r\n  const [logado, setLogado] = useState(false);\r\n\r\n  // Montagem (equivalente ao componentDidMount)\r\n  useEffect(() => {\r\n    console.log(\"Componente montado\");\r\n\r\n    // Função de limpeza (equivalente ao componentWillUnmount)\r\n    return () => {\r\n      console.log(\"Componente desmontado\");\r\n    };\r\n  }, []); // A dependência vazia faz com que isso só seja executado na montagem\r\n\r\n  // Atualização (equivalente ao componentDidUpdate)\r\n  useEffect(() => {\r\n    console.log(\"Componente atualizado\");\r\n  }, [tarefas]); // Quando 'tarefas' mudar, este useEffect será acionado\r\n\r\n  const handleAdicionarTarefa = () => {\r\n    const novaTarefa = prompt(\"Digite uma nova tarefa:\");\r\n    if (novaTarefa) {\r\n      setTarefas([...tarefas, novaTarefa]);\r\n    }\r\n  };\r\n\r\n  const handleRemoverTarefa = (indice) => {\r\n    setTarefas([...tarefas.slice(0, indice), ...tarefas.slice(indice + 1)]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Lista de tarefas</h1>\r\n      <ul>\r\n        {tarefas.map((tarefa, indice) => (\r\n          <li key={indice}>\r\n            <input type=\"checkbox\" checked={tarefa.concluido} />\r\n            <span>{tarefa}</span>\r\n            <button onClick={() => handleRemoverTarefa(indice)}>\r\n              Remover\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {logado ? (\r\n        <h2>Você está logado!</h2>\r\n      ) : (\r\n        <h2>Você não está logado.</h2>\r\n      )}\r\n      <button onClick={() => setLogado(!logado)}>\r\n        Alterar status de login\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}